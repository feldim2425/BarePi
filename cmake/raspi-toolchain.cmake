cmake_minimum_required(VERSION 3.3)

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR ARM)

if(NOT ARM_TOOLCHAIN_TRIPLET)
    set(ARM_TOOLCHAIN_TRIPLET "arm-none-eabi")
    message(STATUS "No ARM_TOOLCHAIN_TRIPLET specified, using default: " ${ARM_TOOLCHAIN_TRIPLET})
endif()

set(CMAKE_C_COMPILER "${ARM_TOOLCHAIN_TRIPLET}-gcc")
set(CMAKE_ASM_COMPILER "${CMAKE_C_COMPILER}")
set(CMAKE_CXX_COMPILER "${ARM_TOOLCHAIN_TRIPLET}-g++")
set(CMAKE_OBJCOPY "${ARM_TOOLCHAIN_TRIPLET}-objcopy${EXECUTABLE_SUFFIX}")
set(CMAKE_OBJDUMP "${ARM_TOOLCHAIN_TRIPLET}-objdump${EXECUTABLE_SUFFIX}")
set(CMAKE_SIZE    "${ARM_TOOLCHAIN_TRIPLET}-size${EXECUTABLE_SUFFIX}")
set(CMAKE_CPPFILT "${ARM_TOOLCHAIN_TRIPLET}-c++filt${EXECUTABLE_SUFFIX}")

set(ARM_TOOLCHAIN_FLAGS "-mcpu=arm1176jz-s -marm -mfpu=vfp")

set(CMAKE_C_FLAGS "${ARM_TOOLCHAIN_FLAGS}")
set(CMAKE_CXX_FLAGS "${ARM_TOOLCHAIN_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS "--specs=nosys.specs ${ARM_TOOLCHAIN_FLAGS}" CACHE INTERNAL "")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
